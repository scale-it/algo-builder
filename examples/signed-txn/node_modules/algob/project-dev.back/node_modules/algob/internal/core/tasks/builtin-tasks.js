"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSetupTask = void 0;
const path = __importStar(require("path"));
const tasks = __importStar(require("../../../builtin-tasks/task-names"));
const plugins_1 = require("../plugins");
function default_1() {
    const ts = new Map(Object.entries(tasks));
    ts.delete('TASK_TEST_EXAMPLE');
    ts.delete('TASK_TEST_GET_TEST_FILES');
    const basedir = path.join(__dirname, "..", "..", "..", "builtin-tasks");
    for (const t of ts) {
        plugins_1.loadPluginFile(path.join(basedir, t[1]));
    }
}
exports.default = default_1;
// checks if the task name is not a setup kind of task
function isSetupTask(taskName) {
    return taskName === tasks.TASK_HELP ||
        taskName === tasks.TASK_INIT;
}
exports.isSetupTask = isSetupTask;
//# sourceMappingURL=builtin-tasks.js.map