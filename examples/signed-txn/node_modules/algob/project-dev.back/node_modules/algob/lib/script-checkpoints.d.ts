import { ASAInfo, ASCInfo, AssetScriptMap, Checkpoint, CheckpointRepo, Checkpoints } from "../types";
export declare const scriptsDirectory = "scripts";
export declare function toCheckpointFileName(scriptName: string): string;
export declare function toScriptFileName(filename: string): string;
export declare function registerASA(cp: Checkpoint, name: string, info: ASAInfo): Checkpoint;
export declare function registerASC(cp: Checkpoint, name: string, info: ASCInfo): Checkpoint;
export declare class CheckpointImpl implements Checkpoint {
    timestamp: number;
    metadata: Map<string, string>;
    asa: Map<string, ASAInfo>;
    asc: Map<string, ASCInfo>;
    constructor(metadata?: Map<string, string>);
}
export declare function appendToCheckpoint(checkpoints: Checkpoints, networkName: string, append: Checkpoint): Checkpoints;
export declare class CheckpointRepoImpl implements CheckpointRepo {
    strippedCP: Checkpoints;
    precedingCP: Checkpoints;
    allCPs: Checkpoints;
    scriptMap: AssetScriptMap;
    private _mergeTo;
    merge(cp: Checkpoints, scriptName: string): CheckpointRepo;
    mergeToGlobal(cp: Checkpoints, scriptName: string): CheckpointRepo;
    private _ensureNet;
    putMetadata(networkName: string, key: string, value: string): CheckpointRepo;
    getMetadata(networkName: string, key: string): string | undefined;
    registerASA(networkName: string, name: string, info: ASAInfo): CheckpointRepo;
    registerASC(networkName: string, name: string, info: ASCInfo): CheckpointRepo;
    isDefined(networkName: string, name: string): boolean;
    networkExistsInCurrentCP(networkName: string): boolean;
}
export declare function persistCheckpoint(scriptName: string, checkpoint: Checkpoints): void;
export declare function toMap<T>(obj: {
    [name: string]: T;
}): Map<string, T>;
export declare function loadCheckpointByCPName(checkpointName: string): Checkpoints;
export declare function loadCheckpoint(scriptName: string): Checkpoints;
export declare function lsScriptsDir(): string[];
export declare function loadCheckpointsRecursive(): CheckpointRepo;
