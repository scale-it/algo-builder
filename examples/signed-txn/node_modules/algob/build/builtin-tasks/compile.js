"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.compile = void 0;
const fs_1 = require("fs");
const config_env_1 = require("../internal/core/config/config-env");
const project_structure_1 = require("../internal/core/project-structure");
const comparators_1 = require("../lib/comparators");
const compile_1 = require("../lib/compile");
const driver_1 = require("../lib/driver");
const task_names_1 = require("./task-names");
function default_1() {
    config_env_1.task(task_names_1.TASK_COMPILE, "Compile all TEAL smart contracts")
        .addFlag("force", "recompile even if the source file didn't change")
        .setAction(compileTask);
}
exports.default = default_1;
function compileTask({ force }, env) {
    const op = new compile_1.CompileOp(driver_1.createClient(env.network));
    return compile(force, op);
}
async function compile(force, op) {
    await project_structure_1.assertDir(project_structure_1.CACHE_DIR);
    for (const f of fs_1.readdirSync(project_structure_1.ASSETS_DIR).sort(comparators_1.cmpStr)) {
        if (!f.endsWith(compile_1.tealExt)) {
            continue;
        }
        await op.ensureCompiled(f, force);
    }
}
exports.compile = compile;
//# sourceMappingURL=compile.js.map