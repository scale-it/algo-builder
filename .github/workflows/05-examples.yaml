name: Run examples on push

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  run-examples-batch-1:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: "16"
          cache: "yarn"
      - name: Install dependencies
        run: yarn install
      - name: Build packages
        run: yarn build

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pipenv"
      - name: Install poetry
        run: pip install -U poetry
      - name: Install pipenv
        run: python -m pip install pipenv
      - run: pipenv sync

      - name: Install Algorand
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg2 curl software-properties-common
          curl -O https://releases.algorand.com/key.pub && sudo apt-key add key.pub
          sudo add-apt-repository "deb [arch=amd64] https://releases.algorand.com/deb/ stable main"
          sudo apt-get update && sudo apt-get install -y algorand
      - name: Setup Network
        run: cd infrastructure && make setup-private-net

      - name: Create algo-builder ts project
        working-directory: ./packages/algob
        run: |
          rm -rf ./project-dev
          ./project-dev-script.sh create --typescript
          pipenv run ./project-dev-script.sh exec test
          cd ./project-dev && npx tsc -b . && cd ..
          pipenv run ./project-dev-script.sh exec deploy

      - name: Create algo-builder js project with npm
        working-directory: ./packages/algob
        run: |
          rm -rf ./project-dev
          ./project-dev-script.sh create --npm
          pipenv run ./project-dev-script.sh exec test 
          pipenv run ./project-dev-script.sh exec deploy

      - name: Create algo-builder js project with yarn
        working-directory: ./packages/algob
        run: |
          rm -rf ./project-dev
          ./project-dev-script.sh create
          pipenv run ./project-dev-script.sh exec test
          pipenv run ./project-dev-script.sh exec deploy

      - name: Example ASA
        working-directory: ./examples/asa
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/transfer/gold-contract-sc.js
          pipenv run yarn algob run --script  scripts/transfer/gold-delegated-lsig.js
          pipenv run yarn algob run --script  scripts/transfer/gold-to-john.js
          pipenv run yarn algob run --script  scripts/transfer/master-fund-john.js
          pipenv run yarn algob run --script  scripts/transfer/tesla-to-john.js

      - name: Example bond token
        working-directory: ./examples/bond
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/run/run.js

      - name: Example crowdfunding
        working-directory: ./examples/crowdfunding
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/transfer/donate.js

      - name: Example htlc-pyteal-ts
        working-directory: ./examples/htlc-pyteal-ts
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/withdraw/htlc-withdraw.ts

      - name: Example multisig
        run: cd examples/multisig && pipenv run yarn algob deploy

      - name: Example nft
        working-directory: ./examples/nft
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/transfer/create-transfer-nft.js

      - name: Example permissioned-token
        working-directory: ./examples/permissioned-token
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/admin/issue.js
          pipenv run yarn algob run --script  scripts/permissions/whitelist.js
          pipenv run yarn algob run --script  scripts/user/transfer.js
          pipenv run yarn algob run --script  scripts/admin/force-transfer.js
          pipenv run yarn algob run --script  scripts/admin/update-reserve.js
          pipenv run yarn algob run --script  scripts/permissions/change-perm-manager.js
          pipenv run yarn algob run --script  scripts/admin/kill.js
          pipenv run yarn algob run --script  scripts/user/opt-out.js

  run-examples-batch-2:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: "16"
          cache: "yarn"
      - name: Install dependencies
        run: yarn install
      - name: Build packages
        run: yarn build

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pipenv"
      - name: Install poetry
        run: pip install -U poetry
      - name: Install pipenv
        run: python -m pip install pipenv
      - run: pipenv sync

      - name: Install Algorand
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg2 curl software-properties-common
          curl -O https://releases.algorand.com/key.pub && sudo apt-key add key.pub
          sudo add-apt-repository "deb [arch=amd64] https://releases.algorand.com/deb/ stable main"
          sudo apt-get update && sudo apt-get install -y algorand
      - name: Setup Network
        run: cd infrastructure && make setup-private-net

      - name: Example permissioned-token-freezing
        working-directory: ./examples/permissioned-token-freezing
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/transfer/set-clear-level.js
          pipenv run yarn algob run --script  scripts/transfer/transfer-asset.js

      - name: Example permissioned-voting
        working-directory: ./examples/permissioned-voting
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/vote/vote.js
          pipenv run yarn algob run --script  scripts/vote/result.js

      - name: Example ref-templates
        run: |
          cd examples/ref-templates
          pipenv run yarn algob deploy

      - name: Example stateful-counter
        working-directory: ./examples/stateful-counter
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/interaction/call_application.js
            pipenv run yarn algob run --script  scripts/interaction/delete_application.js

      - name: Example DAO
        working-directory: ./examples/dao
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/run/add_proposal.js
          pipenv run yarn algob run --script  scripts/run/deposit_vote_token.js

  run-examples-batch-3:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: "16"
          cache: "yarn"
      - name: Install dependencies
        run: yarn install
      - name: Build packages
        run: yarn build

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pipenv"
      - name: Install poetry
        run: pip install -U poetry
      - name: Install pipenv
        run: python -m pip install pipenv
      - run: pipenv sync

      - name: Install Algorand
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg2 curl software-properties-common
          curl -O https://releases.algorand.com/key.pub && sudo apt-key add key.pub
          sudo add-apt-repository "deb [arch=amd64] https://releases.algorand.com/deb/ stable main"
          sudo apt-get update && sudo apt-get install -y algorand
      - name: Setup Network
        run: cd infrastructure && make setup-private-net

      - name: Example unique-nft-asa
        working-directory: ./examples/unique-nft-asa
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/run/transfer-nft.js
      - name: Example inner-tx-create-assets
        working-directory: ./examples/inner-tx-create-assets
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/run/useInnerTxn.js
          pipenv run yarn algob run --script  scripts/run/useGroupTxn.js
      - name: Trampoline
        working-directory: ./examples/trampoline
        run: |
          pipenv run yarn algob deploy
          pipenv run yarn algob run --script  scripts/run/create-fund-app.js
